openapi: 3.0.3
info:
  title: Edusm User & Admin Management API
  version: 1.0.0
  description: API for creating users/admins, login, and role-based validation with token and superadmin_email.

servers:
  - url: http://localhost:3000/api

paths:
  /admin/create:
    post:
      summary: Create a new user or admin
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
                role:
                  type: string
                token:
                  type: string
                  description: Required if superadmin_email is present
                superadmin_email:
                  type: string
              required:
                - email
                - password
      responses:
        '200':
          description: User created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  token:
                    type: string
        '400':
          description: Validation error (missing fields)
        '403':
          description: Unauthorized (invalid token or superadmin_email)
        '409':
          description: Conflict (email already exists)

  /admin/login:
    post:
      summary: Login admin with email and password
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
              required:
                - email
                - password
      responses:
        '200':
          description: Login successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                  role:
                    type: string
                  email:
                    type: string
        '401':
          description: Invalid credentials
        '404':
          description: User not found

  /admin/boards:
    get:
      summary: Get all education boards
      responses:
        '200':
          description: List of boards
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    board_id:
                      type: integer
                    board_name:
                      type: string
                    image:
                      type: string
                    linkTo:
                      type: string

    post:
      summary: Create a new education board (superadmin token required)
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                board_name:
                  type: string
                image:
                  type: string
                linkTo:
                  type: string
                token:
                  type: string
              required:
                - board_name
                - token
      responses:
        '200':
          description: Board created
        '403':
          description: Invalid superadmin token
        '400':
          description: Missing fields

    put:
      summary: Update an education board (superadmin token required)
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                board_id:
                  type: integer
                board_name:
                  type: string
                image:
                  type: string
                linkTo:
                  type: string
                token:
                  type: string
              required:
                - board_id
                - token
      responses:
        '200':
          description: Board updated
        '403':
          description: Invalid token or unauthorized
        '400':
          description: Missing fields

    delete:
      summary: Delete a board by ID (superadmin token required)
      parameters:
        - in: query
          name: board_id
          schema:
            type: integer
          required: true
        - in: query
          name: token
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Board deleted
        '403':
          description: Invalid token
        '400':
          description: Missing board_id or token

  /admin/classes:
    get:
      summary: Fetch all classes by Board ID
      parameters:
        - name: board_id
          in: query
          required: true
          description: The board ID to fetch associated classes.
          schema:
            type: string
      responses:
        '200':
          description: List of classes by board ID
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    class_id:
                      type: integer
                    class_name:
                      type: string
                    board_id:
                      type: string
        '400':
          description: Invalid or missing board_id parameter
        '500':
          description: Internal server error

    post:
      summary: Add a new class
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                class_name:
                  type: string
                  description: Name of the class
                board_id:
                  type: string
                  description: ID of the board
              required:
                - class_name
                - board_id
      responses:
        '200':
          description: Class added successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  id:
                    type: integer
        '401':
          description: Unauthorized (Superadmin token required)
        '500':
          description: Internal server error

  /admin/classes/{class_id}:
    put:
      summary: Update an existing class
      parameters:
        - name: class_id
          in: path
          required: true
          description: The ID of the class to update.
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                class_name:
                  type: string
                  description: Updated name of the class
              required:
                - class_name
      responses:
        '200':
          description: Class updated successfully
        '400':
          description: Missing or invalid class_id parameter
        '401':
          description: Unauthorized (Superadmin token required)
        '404':
          description: Class not found
        '500':
          description: Internal server error

    delete:
      summary: Delete a class
      parameters:
        - name: class_id
          in: path
          required: true
          description: The ID of the class to delete.
          schema:
            type: integer
      responses:
        '200':
          description: Class deleted successfully
        '400':
          description: Invalid or missing class_id parameter
        '401':
          description: Unauthorized (Superadmin token required)
        '500':
          description: Internal server error